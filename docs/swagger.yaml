basePath: /
definitions:
  handlers.CallNextRequest:
    properties:
      window_number:
        type: integer
    required:
    - window_number
    type: object
  handlers.ConfirmationRequest:
    description: Запрос подтверждения действия (печать талона или получение электронного)
    properties:
      action:
        example: print_ticket
        type: string
      service_id:
        example: make_appointment
        type: string
    required:
    - action
    - service_id
    type: object
  handlers.ConfirmationResponse:
    description: Ответ после подтверждения действия
    properties:
      message:
        example: Ваш электронный талон
        type: string
      service_name:
        example: Записаться к врачу
        type: string
      ticket_number:
        example: A001
        type: string
      timeout:
        example: 10
        type: integer
    type: object
  handlers.ServiceSelectionRequest:
    description: Запрос для выбора услуги
    properties:
      service_id:
        example: make_appointment
        type: string
    required:
    - service_id
    type: object
  handlers.ServiceSelectionResponse:
    description: Ответ после выбора услуги
    properties:
      action:
        example: confirm_print
        type: string
      service_name:
        example: Записаться к врачу
        type: string
    type: object
  handlers.UpdateStatusRequest:
    description: Запрос для смены статуса тикета
    properties:
      status:
        type: string
    required:
    - status
    type: object
  models.TicketResponse:
    description: Ответ API с данными талона
    properties:
      called_at:
        type: string
      completed_at:
        type: string
      created_at:
        type: string
      id:
        type: integer
      qr_code:
        items:
          type: integer
        type: array
      started_at:
        type: string
      status:
        $ref: '#/definitions/models.TicketStatus'
      ticket_number:
        type: string
      window_number:
        type: integer
    type: object
  models.TicketStatus:
    enum:
    - ожидает
    - приглашен
    - на_приеме
    - завершен
    - подойти_к_окну
    - зарегистрирован
    type: string
    x-enum-comments:
      StatusInvited: Пациент вызван к окну
      StatusToWindow: 'TODO: Это может быть синонимом ''приглашен'', можно будет убрать/изменить'
    x-enum-varnames:
    - StatusWaiting
    - StatusInvited
    - StatusInProgress
    - StatusCompleted
    - StatusToWindow
    - StatusRegistered
  services.Service:
    properties:
      id:
        type: string
      letter:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для системы электронной очереди
  title: Electronic Queue API
  version: "1.0"
paths:
  /api/registrar/call-next:
    post:
      consumes:
      - application/json
      description: Находит первого пациента в очереди, меняет его статус на "приглашен"
        и присваивает номер окна
      parameters:
      - description: Номер окна, которое вызывает пациента
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CallNextRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Данные вызванного талона
          schema:
            $ref: '#/definitions/models.TicketResponse'
        "400":
          description: 'Ошибка: неверный номер окна'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'Ошибка: очередь пуста'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вызвать следующего пациента
      tags:
      - registrar
  /api/registrar/tickets/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет тикет по ID
      parameters:
      - description: ID тикета
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Тикет удален
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Тикет не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить тикет
      tags:
      - registrar
  /api/registrar/tickets/{id}/status:
    patch:
      consumes:
      - application/json
      description: Изменяет статус тикета по ID
      parameters:
      - description: ID тикета
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Статус обновлен
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Тикет не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Сменить статус тикета
      tags:
      - registrar
  /api/tickets/print/confirmation:
    post:
      consumes:
      - application/json
      description: Обрабатывает подтверждение действия (печать талона или получение
        электронного)
      parameters:
      - description: Данные для подтверждения действия
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ConfirmationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ответ после подтверждения действия
          schema:
            $ref: '#/definitions/handlers.ConfirmationResponse'
        "400":
          description: 'Ошибка: не передан service_id или action'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Подтверждение действия
      tags:
      - tickets
  /api/tickets/print/selection:
    post:
      consumes:
      - application/json
      description: Определяет следующий шаг после выбора услуги
      parameters:
      - description: Данные для выбора услуги
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ServiceSelectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Следующий шаг после выбора услуги
          schema:
            $ref: '#/definitions/handlers.ServiceSelectionResponse'
        "400":
          description: 'Ошибка: не передан service_id'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выбор услуги
      tags:
      - tickets
  /api/tickets/services:
    get:
      consumes:
      - application/json
      description: Возвращает список доступных услуг
      produces:
      - application/json
      responses:
        "200":
          description: Список услуг
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/services.Service'
              type: array
            type: object
      summary: Получить список услуг
      tags:
      - tickets
  /api/tickets/start:
    get:
      consumes:
      - application/json
      description: Возвращает стартовую информацию для клиента (например, текст кнопки)
      produces:
      - application/json
      responses:
        "200":
          description: 'Успешный ответ: текст кнопки'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить стартовую информацию
      tags:
      - tickets
swagger: "2.0"
